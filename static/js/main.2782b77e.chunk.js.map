{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/Heading/Heading.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","animation/fadeContactList.module.css","animation/fadeNotification.module.css","animation/fadeFilter.module.css","animation/fadeHeading.module.css","redux/contacts/contactsAction.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Section/Section.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/App/App.js","redux/contacts/handleContactsReducer.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","mapDispatchToProps","onChangeFilter","contactsAction","connect","contacts","value","filter","items","length","className","styles","filterWrapper","type","autoComplete","input","onChange","e","target","Heading","heading","Section","children","section","ContactListItem","onRemove","listItem","button","onClick","onRemoveContact","normalizedFilter","toLowerCase","includes","TransitionGroup","component","list","map","CSSTransition","key","timeout","classNames","fadeContactList","Notification","notificationWrapper","text","ContactForm","state","isNotice","setNotificationTimeout","setTimeout","setState","handleChange","handleFormSubmit","preventDefault","props","find","onAddContact","this","in","fadeNotification","unmountOnExit","form","onSubmit","autoFocus","Component","App","fadeHeading","appear","fadeFilter","createReducer","handleContactsReducer","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2782b77e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-d1f\",\"input\":\"ContactForm_input__2ywZC\",\"button\":\"ContactForm_button__3AtRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1prc0\",\"contact\":\"ContactListItem_contact__1lOPm\",\"button\":\"ContactListItem_button__3Ljwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2WJAs\",\"input\":\"Filter_input__1qoaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWrapper\":\"Notification_notificationWrapper__2TXPD\",\"text\":\"Notification_text__3QpjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__2yxB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3bpxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Ei0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContactList_enter__3sGDZ\",\"enterActive\":\"fadeContactList_enterActive__3REnu\",\"exit\":\"fadeContactList_exit__24Ful\",\"exitActive\":\"fadeContactList_exitActive__2WwWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__3myfM\",\"enterActive\":\"fadeNotification_enterActive__4q0nq\",\"exit\":\"fadeNotification_exit__1vvF9\",\"exitActive\":\"fadeNotification_exitActive___FQ2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFilter_enter__22BwZ\",\"enterActive\":\"fadeFilter_enterActive__3vMJZ\",\"exit\":\"fadeFilter_exit__27Fi1\",\"exitActive\":\"fadeFilter_exitActive__11AC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeHeading_appear__i4psE\",\"appearActive\":\"fadeHeading_appearActive__2QHS6\"};","//Redux\r\nimport { createAction } from '@reduxjs/toolkit';\r\n//Utils\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n\tpayload: {\r\n\t\tcontact: {\r\n\t\t\tid: uuidv4(),\r\n\t\t\tname,\r\n\t\t\tnumber,\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst removeContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n\taddContact,\r\n\tremoveContact,\r\n\tchangeFilter,\r\n};\r\n\r\n//ДО РЕФАКТОРИНГА\r\n//\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import actionTypes from './contactsActionTypes';\r\n\r\n// const addContact = (name, number) => ({\r\n// \ttype: actionTypes.ADD,\r\n// \tpayload: {\r\n// \t\tcontact: {\r\n// \t\t\tid: uuidv4(),\r\n// \t\t\tname,\r\n// \t\t\tnumber,\r\n// \t\t},\r\n// \t},\r\n// });\r\n\r\n// const removeContact = contactId => ({\r\n// \ttype: actionTypes.REMOVE,\r\n// \tpayload: {\r\n// \t\tcontactId,\r\n// \t},\r\n// });\r\n\r\n// const changeFilter = filter => ({\r\n// \ttype: actionTypes.CHANGE_FILTER,\r\n// \tpayload: {\r\n// \t\tfilter,\r\n// \t},\r\n// });\r\n\r\n// export default {\r\n// \taddContact,\r\n// \tremoveContact,\r\n// \tchangeFilter,\r\n// };\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from 'redux/contacts/contactsAction';\r\n//Styles\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, contacts, onChangeFilter }) =>\r\n\tcontacts.length > 1 && (\r\n\t\t<div className={styles.filterWrapper}>\r\n\t\t\t<label>\r\n\t\t\t\tFind contacts by name\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\tonChange={e => onChangeFilter(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n\r\nFilter.propTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n\tonChangeFilter: PropTypes.func.isRequired,\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tnumber: PropTypes.string.isRequired,\r\n\t\t}).isRequired,\r\n\t).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n\tvalue: contacts.filter,\r\n\tcontacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tonChangeFilter: contactsAction.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","//Core\r\nimport React from 'react';\r\n//Styles\r\nimport styles from './Heading.module.css';\r\n\r\nconst Heading = () => <h1 className={styles.heading}>Phonebook</h1>;\r\n\r\nexport default Heading;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => <section className={styles.section}>{children}</section>;\r\n\r\nSection.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n\t<li className={styles.listItem}>\r\n\t\t<p className={styles.contact}>\r\n\t\t\t<span>{name}:</span> {number}\r\n\t\t</p>\r\n\r\n\t\t<button type=\"button\" className={styles.button} onClick={onRemove}>\r\n\t\t\t&#10006;\r\n\t\t</button>\r\n\t</li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.string.isRequired,\r\n\tonRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from 'redux/contacts/contactsAction';\r\n//Components\r\nimport ContactListItem from '../ContactListItem';\r\n//Styles\r\nimport styles from './ContactList.module.css';\r\nimport fadeContactList from 'animation/fadeContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) =>\r\n\tcontacts.length > 0 && (\r\n\t\t<TransitionGroup component=\"ul\" className={styles.list}>\r\n\t\t\t{contacts.map(({ id, name, number }) => (\r\n\t\t\t\t<CSSTransition key={id} timeout={250} classNames={fadeContactList}>\r\n\t\t\t\t\t<ContactListItem name={name} number={number} onRemove={() => onRemoveContact(id)} />\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t))}\r\n\t\t</TransitionGroup>\r\n\t);\r\n\r\nContactList.propTypes = {\r\n\tonRemoveContact: PropTypes.func.isRequired,\r\n\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tnumber: PropTypes.string.isRequired,\r\n\t\t}).isRequired,\r\n\t).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => {\r\n\tconst { items, filter } = contacts;\r\n\tconst normalizedFilter = filter.toLowerCase();\r\n\r\n\treturn {\r\n\t\tcontacts: items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter)),\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tonRemoveContact: contactsAction.removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","//Core\r\nimport React from 'react';\r\n//Styles\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n\t<div className={styles.notificationWrapper}>\r\n\t\t<p className={styles.text}>Contact is already exists!</p>\r\n\t</div>\r\n);\r\n\r\nexport default Notification;\r\n","//Core\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from 'redux/contacts/contactsAction';\r\n//Components\r\nimport Notification from '../Notification';\r\n//Styles\r\nimport styles from './ContactForm.module.css';\r\nimport fadeNotification from 'animation/fadeNotification.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n\tstatic propTypes = {\r\n\t\tonAddContact: PropTypes.func.isRequired,\r\n\r\n\t\tcontacts: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\t\tnumber: PropTypes.string.isRequired,\r\n\t\t\t}).isRequired,\r\n\t\t).isRequired,\r\n\t};\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t\tisNotice: false,\r\n\t};\r\n\r\n\tsetNotificationTimeout = () => setTimeout(() => this.setState({ isNotice: false }), 2000);\r\n\r\n\thandleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\thandleFormSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst isContactExists = this.props.contacts.find(\r\n\t\t\t({ name }) => name.toLowerCase() === this.state.name.toLowerCase(),\r\n\t\t);\r\n\r\n\t\tif (isContactExists) {\r\n\t\t\tthis.setState({ name: '', number: '', isNotice: true });\r\n\t\t\treturn this.setNotificationTimeout();\r\n\t\t}\r\n\r\n\t\tthis.props.onAddContact(this.state.name, this.state.number);\r\n\t\tthis.setState({ name: '', number: '' });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, number, isNotice } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<CSSTransition in={isNotice} classNames={fadeNotification} timeout={250} unmountOnExit>\r\n\t\t\t\t\t<Notification />\r\n\t\t\t\t</CSSTransition>\r\n\r\n\t\t\t\t<form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNumber\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\t\tAdd contact\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n\tcontacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tonAddContact: contactsAction.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","//Core\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n//Components\nimport Filter from '../Filter';\nimport Heading from '../Heading';\nimport Section from '../Section';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\n//Styles\nimport fadeFilter from 'animation/fadeFilter.module.css';\nimport fadeHeading from 'animation/fadeHeading.module.css';\n\nconst App = () => (\n\t<Section>\n\t\t<CSSTransition in={true} classNames={fadeHeading} timeout={500} appear unmountOnExit>\n\t\t\t<Heading />\n\t\t</CSSTransition>\n\n\t\t<ContactForm />\n\n\t\t<CSSTransition in={true} classNames={fadeFilter} timeout={250} unmountOnExit>\n\t\t\t<Filter />\n\t\t</CSSTransition>\n\n\t\t<ContactList />\n\t</Section>\n);\n\nexport default App;\n","const onAddContact = (state, { payload }) => [...state, payload.contact];\r\nconst onRemoveContact = (state, { payload }) => state.filter(({ id }) => id !== payload);\r\nconst onChangeFilter = (state, { payload }) => payload;\r\n\r\nexport default {\r\n\tonAddContact,\r\n\tonChangeFilter,\r\n\tonRemoveContact,\r\n};\r\n","//Redux\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\nimport handleContactsReducer from './handleContactsReducer';\r\n\r\nconst items = createReducer([], {\r\n\t[contactsAction.addContact]: handleContactsReducer.onAddContact,\r\n\t[contactsAction.removeContact]: handleContactsReducer.onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n\t[contactsAction.changeFilter]: handleContactsReducer.onChangeFilter,\r\n});\r\n\r\nexport default combineReducers({\r\n\titems,\r\n\tfilter,\r\n});\r\n\r\n// ДО РЕФАКТОРИНГА\r\n//\r\n// import { combineReducers } from 'redux';\r\n// import actionTypes from './contactsActionTypes';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n// \tswitch (type) {\r\n// \t\tcase actionTypes.ADD:\r\n// \t\t\treturn [...state, payload.contact];\r\n\r\n// \t\tcase actionTypes.REMOVE:\r\n// \t\t\treturn state.filter(({ id }) => id !== payload.contactId);\r\n\r\n// \t\tdefault:\r\n// \t\t\treturn state;\r\n// \t}\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n// \tswitch (type) {\r\n// \t\tcase actionTypes.CHANGE_FILTER:\r\n// \t\t\treturn payload.filter;\r\n\r\n// \t\tdefault:\r\n// \t\t\treturn state;\r\n// \t}\r\n// };\r\n\r\n// export default combineReducers({\r\n// \titems,\r\n// \tfilter,\r\n// });\r\n","//Redux\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tcontacts: contactsReducer,\r\n\t},\r\n});\r\n\r\nexport default store;\r\n\r\n// ДО РЕФАКТОРИНГА\r\n//\r\n// import { createStore, combineReducers } from 'redux';\r\n// import contactsReducer from './contacts/contactsReducer';\r\n\r\n// const rootReducer = combineReducers({\r\n// \tcontacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n// \trootReducer,\r\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n\r\n// export default store;\r\n","//Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport App from 'components/App';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n//Styles\nimport './index.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}